// dia: 19/09/23 hs: 17:45
package universidadgrupo33.vistas;

import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import universidadgrupo33.accesoADatos.AlumnoData;
import universidadgrupo33.accesoADatos.InscripcionData;
import universidadgrupo33.accesoADatos.MateriaData;
import universidadgrupo33.entidades.Alumno;
import universidadgrupo33.entidades.Inscripcion;
import universidadgrupo33.entidades.Materia;

public class JIFInscripciones extends javax.swing.JInternalFrame {

    private DefaultTableModel modelo = new DefaultTableModel() {
        public boolean isCellEditable(int f, int c) {
            return false;
        }
    };
    AlumnoData alu = new AlumnoData();
    MateriaData mat = new MateriaData();
    InscripcionData ins = new InscripcionData();
    Alumno alu2 = new Alumno();
    Materia mat2 = new Materia();
    Inscripcion ins2 = new Inscripcion();

    // se usara esta variablñe para ser referencia del idALumno a buscar    
    int idAlumnoABuscar = 0;
    int idMateriaABuscar = 0;

    public JIFInscripciones() {
        initComponents();
        armarCabecera();
        cargarComboBoxALumnos();
        this.setTitle("UNIVERSIDAD ULP - Formulario de Inscripción");
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoBotones = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jcbSeleccionAlumno = new javax.swing.JComboBox<>();
        jrbMateriasInscriptas = new javax.swing.JRadioButton();
        jrbjrbMateriasNoInscriptas = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtResultadoSeleccionAlumnos = new javax.swing.JTable();
        jbAnularInscripcion = new javax.swing.JButton();
        jbInscribir = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("Formulario de Inscripción");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("Seleccione un alumno:");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel3.setText("Listado de Materias");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setText("Materias no Inscriptas");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel5.setText("Materias Inscriptas");

        jcbSeleccionAlumno.setFont(new java.awt.Font("Dialog", 1, 19)); // NOI18N
        jcbSeleccionAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbSeleccionAlumnoActionPerformed(evt);
            }
        });

        grupoBotones.add(jrbMateriasInscriptas);
        jrbMateriasInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbMateriasInscriptasActionPerformed(evt);
            }
        });

        grupoBotones.add(jrbjrbMateriasNoInscriptas);
        jrbjrbMateriasNoInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbjrbMateriasNoInscriptasActionPerformed(evt);
            }
        });

        jtResultadoSeleccionAlumnos.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jtResultadoSeleccionAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jScrollPane1.setViewportView(jtResultadoSeleccionAlumnos);

        jbAnularInscripcion.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jbAnularInscripcion.setText("Anular Inscripcion");
        jbAnularInscripcion.setEnabled(false);
        jbAnularInscripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAnularInscripcionActionPerformed(evt);
            }
        });

        jbInscribir.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jbInscribir.setText("Inscribir");
        jbInscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInscribirActionPerformed(evt);
            }
        });

        jbSalir.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jcbSeleccionAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jrbMateriasInscriptas)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addGap(43, 43, 43)
                        .addComponent(jrbjrbMateriasNoInscriptas)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbInscribir, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbAnularInscripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 970, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jcbSeleccionAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jLabel3)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jrbMateriasInscriptas)
                    .addComponent(jrbjrbMateriasNoInscriptas)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(50, 50, 50)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbInscribir)
                    .addComponent(jbAnularInscripcion)
                    .addComponent(jbSalir))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbAnularInscripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAnularInscripcionActionPerformed

        if (jtResultadoSeleccionAlumnos.getSelectedRow() != -1) {
            //idMateriaABuscar = Integer.parseInt((String) modelo.getValueAt(jtResultadoSeleccionAlumnos.getSelectedRow(), 0));
            idMateriaABuscar = (int) modelo.getValueAt(jtResultadoSeleccionAlumnos.getSelectedRow(), 0);

            // Lo imprimimos en pantalla
            System.out.println(idMateriaABuscar);
            ins.borrarInscripcionMateriaAlumno(idAlumnoABuscar, idMateriaABuscar);

        } else {
            JOptionPane.showMessageDialog(this, "No existe materia para anular");
        }
    }//GEN-LAST:event_jbAnularInscripcionActionPerformed

    private void jbInscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInscribirActionPerformed
        if (jtResultadoSeleccionAlumnos.getSelectedRow() != -1) {
            //idMateriaABuscar = Integer.parseInt((String) modelo.getValueAt(jtResultadoSeleccionAlumnos.getSelectedRow(), 0));
            idMateriaABuscar = (int) modelo.getValueAt(jtResultadoSeleccionAlumnos.getSelectedRow(), 0);
            alu2.setIdAlumno(idAlumnoABuscar);
            mat2.setIdMateria(idMateriaABuscar);

            Inscripcion insc3 = new Inscripcion(alu2, mat2, 0);
            // Lo imprimimos en pantalla
            System.out.println(idMateriaABuscar);
            ins.guardarInscripcion(insc3);

        } else {
            JOptionPane.showMessageDialog(this, "No existe materia para anular");
        }
    }//GEN-LAST:event_jbInscribirActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jrbjrbMateriasNoInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbjrbMateriasNoInscriptasActionPerformed

        botonMateriasNoInscriptas();
            

    
    }//GEN-LAST:event_jrbjrbMateriasNoInscriptasActionPerformed

    private void jrbMateriasInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbMateriasInscriptasActionPerformed
        
        botonMateriasInscriptas();
              
    }//GEN-LAST:event_jrbMateriasInscriptasActionPerformed

    private void jcbSeleccionAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbSeleccionAlumnoActionPerformed
        alu2  = (Alumno) jcbSeleccionAlumno.getSelectedItem();                
        idAlumnoABuscar=alu2.getIdAlumno();
        
        if (jrbMateriasInscriptas.isSelected()){
            modelo.setRowCount(0);
            botonMateriasInscriptas();
        
        }
        
        if (jrbjrbMateriasNoInscriptas.isSelected()){
            modelo.setRowCount(0);
            botonMateriasNoInscriptas();
        
        }
        
        
        //System.out.println("x idAlumno a usar par buscar en Materias: "+idAlumnoABuscar);         
    }//GEN-LAST:event_jcbSeleccionAlumnoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup grupoBotones;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAnularInscripcion;
    private javax.swing.JButton jbInscribir;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox<Alumno> jcbSeleccionAlumno;
    private javax.swing.JRadioButton jrbMateriasInscriptas;
    private javax.swing.JRadioButton jrbjrbMateriasNoInscriptas;
    private javax.swing.JTable jtResultadoSeleccionAlumnos;
    // End of variables declaration//GEN-END:variables

    private void armarCabecera(){
    modelo.addColumn("IdMateria");
    modelo.addColumn("Nombre de materia");
    modelo.addColumn("Año");
    jtResultadoSeleccionAlumnos.setModel(modelo);

    }
    
    private void borrarFilas()
    {
        int filas = jtResultadoSeleccionAlumnos.getRowCount() - 1;
        System.out.println(jtResultadoSeleccionAlumnos.getCellEditor());
        System.out.println(filas);
        for (int i = filas; i >= 0; i--) {
            modelo.removeRow(i);
        }
    }
    
    private void cargarComboBoxALumnos()
    {           
        
        //System.out.println("Entro a llenar el combobox");
        // Vaciar el JComboBox
        jcbSeleccionAlumno.removeAllItems();
        for(Alumno alum:alu.listarAlumnos(1)){      
            jcbSeleccionAlumno.addItem(alum); 
        }        
    }        
    
    public void botonMateriasNoInscriptas() {
        jbInscribir.setEnabled(true);
        jbAnularInscripcion.setEnabled(false);
        modelo.setRowCount(0);
        for (Materia mater : ins.obtenerMateriasNoCursadas(idAlumnoABuscar)) {
            modelo.addRow(new Object[]{mater.getIdMateria(),
                mater.getNombre(),
                mater.getAño()});
        }
    }
    
    public void botonMateriasInscriptas() {
        jbInscribir.setEnabled(false);
        jbAnularInscripcion.setEnabled(true);
        modelo.setRowCount(0);        
        for(Materia mater:ins.obtenerMateriasCursadas(idAlumnoABuscar)){      
           modelo.addRow(new Object []{mater.getIdMateria(),
                   mater.getNombre(),
                   mater.getAño()});            
        }  
    }
    
}
